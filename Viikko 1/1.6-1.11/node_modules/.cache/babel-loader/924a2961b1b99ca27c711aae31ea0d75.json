{"ast":null,"code":"import _slicedToArray from \"/home/local/aknu/unicafe1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/local/aknu/unicafe1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nvar Button = function Button(_ref) {\n  var handleClick = _ref.handleClick,\n      text = _ref.text;\n  return React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, text);\n};\n\nvar Statistic = function Statistic(_ref2) {\n  var value = _ref2.value,\n      text = _ref2.text;\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"value=\", props.good, \", value=\", props.neutral, \", value=\", props.bad, text);\n};\n\nvar Graph = function Graph(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" \", React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Anna mielipiteesi Unicafen palvelusta \")), \" \");\n};\n\nvar Statistics = function Statistics(props) {\n  if (props.good === 0 && props.neutral === 0 && props.bad === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Ei yht\\xE4\\xE4n annettua palautetta\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"T I L A S T O T\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Hyv\\xE4\\xE4: \", props.good, \", Neutraali: \", props.neutral, \", Pahaa: \", props.bad, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Yhteens\\xE4: \", props.good + props.neutral + props.bad, \", Keskiarvo: \", (props.good - props.bad) / (props.good + props.neutral + props.bad), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Positiivisia: \", props.good / (props.good + props.neutral + props.bad) * 100, \"%\"))));\n};\n\nvar App = function App(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      good = _useState2[0],\n      setGood = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      neutral = _useState4[0],\n      setNeutral = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      bad = _useState6[0],\n      setBad = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      allReviews = _useState8[0],\n      setAll = _useState8[1];\n\n  var handleGoodClick = function handleGoodClick() {\n    setGood(good + 1);\n  };\n\n  var handleBadClick = function handleBadClick() {\n    setBad(bad + 1);\n  };\n\n  var handleNeutralClick = function handleNeutralClick() {\n    setNeutral(neutral + 1);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Graph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: handleGoodClick,\n    text: \"Hyv\\xE4\\xE4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: handleNeutralClick,\n    text: \"Neutraali\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: handleBadClick,\n    text: \"Pahaa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Hyv\\xE4\\xE4: \",\n    value: good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Neutraali: \",\n    value: neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Pahaa: \",\n    value: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Yhteens\\xE4: \",\n    value: good + neutral + bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Keskiarvo\",\n    value: (props.good - props.bad) / (props.good + props.neutral + props.bad),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Positiivisia: \",\n    value: props.good / (props.good + props.neutral + props.bad) * 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/local/aknu/unicafe1/src/index.js"],"names":["React","useState","ReactDOM","Button","handleClick","text","Statistic","value","props","good","neutral","bad","Graph","Statistics","App","setGood","setNeutral","setBad","allReviews","setAll","handleGoodClick","handleBadClick","handleNeutralClick","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({handleClick, text}) => (\n    <button onClick={handleClick}>\n    {text}\n    </button>\n)\n\nconst Statistic =({value, text}) => (\n  <p>value={props.good}, value={props.neutral}, value={props.bad}\n  {text}\n  </p>\n)\n\nconst Graph = (props) => {\n  return (\n    <div> <h1><strong>Anna mielipiteesi Unicafen palvelusta </strong></h1> </div>\n  )\n}\n\nconst Statistics = (props) => {\n  if (props.good === 0 && props.neutral === 0 && props.bad === 0) {\n    return (<div>Ei yhtään annettua palautetta</div>)\n  }\n  return (<div><h1>T I L A S T O T</h1>\n    <div>Hyvää: {props.good}, Neutraali: {props.neutral}, Pahaa: {props.bad}\n    <div>Yhteensä: {props.good + props.neutral + props.bad}, \n    Keskiarvo: {(props.good - props.bad)/(props.good + props.neutral + props.bad)}\n    <div>Positiivisia: {props.good/(props.good + props.neutral + props.bad)*100}%</div></div></div>\n    </div>\n    \n  )\n}\n\nconst App = (props) => {\n  \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [allReviews, setAll] = useState([])\n\n  const handleGoodClick = () => {\n      \n      setGood(good + 1)\n  }\n\n  const handleBadClick = () => {\n    \n      setBad(bad + 1)\n  }\n\n  const handleNeutralClick = () => {\n   \n      setNeutral(neutral + 1)\n  }\n  return (\n    <>\n      <div>\n      <Graph />\n\n      <Button handleClick={handleGoodClick}\n      text='Hyvää'\n      />\n\n      \n      <Button handleClick={handleNeutralClick}\n      text='Neutraali'\n      />\n\n      \n      <Button handleClick={handleBadClick}\n      text='Pahaa'\n      />\n\n      <Statistic text='Hyvää: ' value={good} />\n      <Statistic text='Neutraali: ' value={neutral} />\n      <Statistic text='Pahaa: ' value={bad} />\n      <Statistic text='Yhteensä: ' value={good + neutral + bad} />\n      <Statistic text='Keskiarvo' value={(props.good - props.bad)/(props.good + props.neutral + props.bad)} />\n      <Statistic text='Positiivisia: ' value={props.good/(props.good + props.neutral + props.bad)*100} />\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n      </div>\n      \n    </>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}